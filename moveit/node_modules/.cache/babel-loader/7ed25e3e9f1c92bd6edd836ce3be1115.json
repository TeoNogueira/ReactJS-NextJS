{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\NLW4\\\\moveit\\\\src\\\\components\\\\Button.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; //hook que define estados\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Button(props) {\n  _s();\n\n  const [counter, setCounter] = useState(1); //useState() me retorna um array com duas posições: 1: variavel o valor dela, 2: uma função para atualizar o valor de counter\n\n  function increment() {\n    counter++;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    style: {\n      backgroundColor: props.color\n    },\n    children: [props.children, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Button, \"ahOJHP09T9QHC0WP1OBHltVtITA=\");\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/git/NLW4/moveit/src/components/Button.tsx"],"names":["useState","Button","props","counter","setCounter","increment","backgroundColor","color","children"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAAkC;;;AAWlC,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;AAAA;;AAE3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC,CAF2C,CAEF;;AAEzC,WAASK,SAAT,GAAqB;AAErBF,IAAAA,OAAO;AAEN;;AAGD,sBAEA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAEJ,KAAK,CAACK;AAAzB,KAA7B;AAAA,eAEKL,KAAK,CAACM,QAFX,oBAEqB;AAAA,gBAASL;AAAT;AAAA;AAAA;AAAA;AAAA,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAYC;;GAvBeF,M;;KAAAA,M","sourcesContent":["import { useState } from 'react'; //hook que define estados\r\n\r\ninterface ButtonProps {\r\n\r\n    color: string;\r\n    children: string;\r\n\r\n}\r\n\r\n\r\n\r\nexport function Button(props: ButtonProps) {\r\n\r\nconst [counter, setCounter] = useState(1)//useState() me retorna um array com duas posições: 1: variavel o valor dela, 2: uma função para atualizar o valor de counter\r\n\r\nfunction increment() {\r\n\r\ncounter++;\r\n\r\n}\r\n\r\n\r\nreturn (\r\n\r\n<button type=\"button\" style={{ backgroundColor: props.color }}>\r\n\r\n    {props.children} <strong>{counter}</strong>\r\n\r\n</button>\r\n\r\n\r\n\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}